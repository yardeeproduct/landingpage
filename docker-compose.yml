# Modern Docker Compose configuration (2025)
# No version field needed - using latest Docker Compose syntax
# For local development and testing

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - DJANGO_SETTINGS_MODULE=backend.settings
      - SECRET_KEY=dev-secret-key-change-in-production
      - DB_HOST=db
      - DB_NAME=yardee_dev
      - DB_USER=sa
      - DB_PASSWORD=YourStrong@Passw0rd
      - DB_PORT=1433
      - CORS_ALLOW_ALL_ORIGINS=True
      - SECURE_SSL_REDIRECT=False
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=
      - VITE_APP_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database service for local development only
  # In production, use Azure SQL Database
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "YourStrong@Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

volumes:
  mssql_data:
    driver: local

networks:
  default:
    driver: bridge
