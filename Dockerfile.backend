# Use official Python image (2025 - latest stable)
FROM python:3.12-slim

# Set working directory
WORKDIR /app

# Install system dependencies and Microsoft ODBC Driver 18 for SQL Server
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    curl \
    unixodbc \
    unixodbc-dev \
    libpq-dev \
    ca-certificates \
    gnupg \
    lsb-release && \
    # Add Microsoft GPG key to trusted keys (alternative method)
    curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft-prod.gpg && \
    # Add Microsoft repository using official config script method (works for Debian 11/12)
    curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list && \
    # Update apt after adding Microsoft repository
    apt-get update && \
    # Install Microsoft ODBC Driver 18 for SQL Server (required for Azure SQL)
    ACCEPT_EULA=Y DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends msodbcsql18 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY backend/requirements.txt .

# Use pip with modern best practices (no cache, specific versions)
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Create non-root user for security
RUN adduser --disabled-password --gecos '' appuser

# Copy Django project code
COPY --chown=appuser:appuser backend /app

# Copy logo file for email templates (frontend assets not available in container)
RUN mkdir -p /app/frontend/public/assets/images
COPY --chown=appuser:appuser frontend/public/assets/images/logo-3.png /app/frontend/public/assets/images/logo-3.png

# Copy startup script and fix line endings
COPY --chown=appuser:appuser backend/start.sh /app/start.sh
RUN sed -i 's/\r$//' /app/start.sh && chmod +x /app/start.sh

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Set environment variables for better performance (set early for all layers)
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    DJANGO_SETTINGS_MODULE=backend.settings \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Health check using Django's health endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8000/api/health/ || exit 1

# Run Django with startup script that includes warmup
CMD ["/app/start.sh"]
